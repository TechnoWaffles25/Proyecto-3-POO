package proyecto_2_kenken.ventanas;

import java.io.*;
import java.time.LocalTime;
import java.time.Duration;
import java.time.Instant;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import proyecto_2_kenken.Data;

/**
 * clae que contiene la interfaz gráfica de la configuración de juego
 * @author Alejandro Montero, Fabricio Monge 
 */
public class MenuConfiguracion extends javax.swing.JFrame {

    /**
     * Creates new form MenuConfiguracion
     */
    public MenuConfiguracion() {
        initComponents();
        btnPausar.setEnabled(false);
        btnDetener.setEnabled(false);
        comboHoras.setEnabled(false);
        comboMinutos.setEnabled(false);
        comboSegundos.setEnabled(false);
        
        btnSalir.setOpaque(true);
        btnSalir.setBorderPainted(false);
        btnIniciar.setOpaque(true);
        btnIniciar.setBorderPainted(false);
        btnDetener.setOpaque(true);
        btnDetener.setBorderPainted(false);
        btnPausar.setOpaque(true);
        btnPausar.setBorderPainted(false);
    }

    public String dificultad;
    public String reloj;
    public boolean lado;
    public boolean sonido;
    public int sizeTablero;
    
    public Duration tiempoJuego;
    public Duration tiempoTranscurrido;
    public Timer timer = new Timer(true);
    
    public int horas;
    public int minutos;
    public int segundos;

    public String getDificultad(){
        return dificultad;
    }
    public String getReloj(){
        return reloj;
    }
    public boolean getPosPanel(){
        return lado;
    }
    public boolean getSonido(){
        return sonido;
    }
    
    /*public void setHoras(int pHoras){
        horas = pHoras;
    }
    public void setMinutos(int pMinutos){
        horas = pMinutos;
    }
    public void setSegundos(int pSegundos){
        horas = pSegundos;
    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        panelLbls = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        comboDificultad = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboTablero = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        panelListbox = new javax.swing.JPanel();
        panelReloj = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();
        btnPausar = new javax.swing.JButton();
        btnDetener = new javax.swing.JButton();
        comboSegundos = new javax.swing.JComboBox<>();
        comboHoras = new javax.swing.JComboBox<>();
        comboMinutos = new javax.swing.JComboBox<>();
        lblTiempo = new javax.swing.JLabel();
        comboReloj = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        toggleSonido = new javax.swing.JCheckBox();
        comboLado = new javax.swing.JComboBox<>();
        btnSalir = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        panelLbls.setBackground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Dificultad:");

        comboDificultad.setBackground(new java.awt.Color(102, 102, 102));
        comboDificultad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        comboDificultad.setForeground(new java.awt.Color(204, 204, 204));
        comboDificultad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Facil", "Medio", "Dificil", "Experto" }));
        comboDificultad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDificultadActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("CONFIGURACION");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("Posicion del panel:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Sonido al terminar:");

        comboTablero.setBackground(new java.awt.Color(102, 102, 102));
        comboTablero.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        comboTablero.setForeground(new java.awt.Color(204, 204, 204));
        comboTablero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3x3", "4x4", "5x5", "6x6", "7x7", "8x8", "9x9" }));
        comboTablero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTableroActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("Tamaño Tablero:");

        javax.swing.GroupLayout panelLblsLayout = new javax.swing.GroupLayout(panelLbls);
        panelLbls.setLayout(panelLblsLayout);
        panelLblsLayout.setHorizontalGroup(
            panelLblsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLblsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLblsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLblsLayout.createSequentialGroup()
                        .addGroup(panelLblsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLblsLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(panelLblsLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(89, 89, 89)))
                        .addGroup(panelLblsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(comboDificultad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboTablero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addGroup(panelLblsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelLblsLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelLblsLayout.setVerticalGroup(
            panelLblsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLblsLayout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelLblsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboDificultad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(panelLblsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11)
                    .addComponent(comboTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        panelListbox.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout panelListboxLayout = new javax.swing.GroupLayout(panelListbox);
        panelListbox.setLayout(panelListboxLayout);
        panelListboxLayout.setHorizontalGroup(
            panelListboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelListboxLayout.setVerticalGroup(
            panelListboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );

        panelReloj.setBackground(new java.awt.Color(102, 102, 102));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Horas:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("Minutos:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("Segundos:");

        btnIniciar.setBackground(new java.awt.Color(153, 255, 0));
        btnIniciar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnIniciar.setText("Iniciar");
        btnIniciar.setToolTipText("");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        btnPausar.setBackground(new java.awt.Color(153, 204, 255));
        btnPausar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnPausar.setText("Pausa");
        btnPausar.setToolTipText("");
        btnPausar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPausarActionPerformed(evt);
            }
        });

        btnDetener.setBackground(new java.awt.Color(255, 51, 51));
        btnDetener.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDetener.setText("Detener");
        btnDetener.setToolTipText("");
        btnDetener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetenerActionPerformed(evt);
            }
        });

        comboSegundos.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        comboSegundos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        comboSegundos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSegundosActionPerformed(evt);
            }
        });

        comboHoras.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        comboHoras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));
        comboHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboHorasActionPerformed(evt);
            }
        });

        comboMinutos.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        comboMinutos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        comboMinutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMinutosActionPerformed(evt);
            }
        });

        lblTiempo.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTiempo.setForeground(new java.awt.Color(204, 204, 204));
        lblTiempo.setText("00:00:00");

        comboReloj.setBackground(new java.awt.Color(102, 102, 102));
        comboReloj.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        comboReloj.setForeground(new java.awt.Color(204, 204, 204));
        comboReloj.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cronometro", "Timer", "No Usar" }));
        comboReloj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRelojActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Reloj:");

        javax.swing.GroupLayout panelRelojLayout = new javax.swing.GroupLayout(panelReloj);
        panelReloj.setLayout(panelRelojLayout);
        panelRelojLayout.setHorizontalGroup(
            panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRelojLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnIniciar)
                        .addComponent(btnPausar))
                    .addComponent(btnDetener))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRelojLayout.createSequentialGroup()
                        .addGroup(panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelRelojLayout.createSequentialGroup()
                                .addComponent(comboMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelRelojLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))))
                    .addGroup(panelRelojLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboReloj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRelojLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lblTiempo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelRelojLayout.setVerticalGroup(
            panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRelojLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboReloj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(btnIniciar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRelojLayout.createSequentialGroup()
                        .addGroup(panelRelojLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboHoras)
                            .addComponent(comboMinutos)
                            .addComponent(comboSegundos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTiempo)
                        .addContainerGap())
                    .addGroup(panelRelojLayout.createSequentialGroup()
                        .addComponent(btnPausar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDetener)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        toggleSonido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleSonidoActionPerformed(evt);
            }
        });

        comboLado.setBackground(new java.awt.Color(102, 102, 102));
        comboLado.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        comboLado.setForeground(new java.awt.Color(204, 204, 204));
        comboLado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Izquierda", "Derecha" }));
        comboLado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboLadoActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(255, 51, 51));
        btnSalir.setSelected(true);
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(panelLbls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSalir)
                    .addComponent(comboLado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(toggleSonido)
                        .addGap(48, 48, 48)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelListbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(panelReloj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(panelListbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(panelLbls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnSalir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboLado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(toggleSonido)
                        .addGap(29, 29, 29)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelReloj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void toggleSonidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleSonidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toggleSonidoActionPerformed
/**
 * inicia el contador de cronómetro
 * @param evt click
 */
    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        btnDetener.setEnabled(true);
        if (comboReloj.getSelectedIndex() == 0) {
        System.out.println("Cronometro inicio");

        Instant tiempoInicio = Instant.now();

        if (timer == null) {
            timer = new Timer(true);
        }

        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                Instant now = Instant.now();
                tiempoTranscurrido = Duration.between(tiempoInicio, now);
                updateTimerLabel();
            }
        }, 0, 1000);
        btnIniciar.setEnabled(false);

    } else if (comboReloj.getSelectedIndex() == 1) {
        System.out.println("Timer inicio");

        int pHoras = comboHoras.getSelectedIndex();
        int pMinutos = comboMinutos.getSelectedIndex();
        int pSegundos = comboSegundos.getSelectedIndex();

        tiempoTranscurrido = Duration.ofHours(pHoras).plusMinutes(pMinutos).plusSeconds(pSegundos);

        Instant tiempoInicio = Instant.now().plus(tiempoTranscurrido);

        if (timer == null) {
            timer = new Timer(true);
        } else {
            // If the timer was previously canceled, create a new instance
            timer = new Timer(true);
        }

        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                Instant now = Instant.now();
                tiempoTranscurrido = Duration.between(now, tiempoInicio);
                updateTimerLabel();

                if (tiempoTranscurrido.isNegative() || tiempoTranscurrido.isZero()) {
                    JOptionPane.showMessageDialog(rootPane, "Se acabo el tiempo!");
                    timer.cancel();
                    btnIniciar.setEnabled(true);
                }
            }
        }, 0, 1000);

        btnIniciar.setEnabled(false);
    }
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void btnPausarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPausarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPausarActionPerformed
/**
 * detiene el cronómetro 
 * @param evt click
 */
    private void btnDetenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetenerActionPerformed
        btnDetener.setEnabled(false);
        if (comboReloj.getSelectedIndex() == 0){
                System.out.println("Cronometro Stop");

                if (timer != null) {
                    timer.cancel();
                    timer = null;
                }
                resetTimerLabel();
                btnIniciar.setEnabled(true);

            } if (comboReloj.getSelectedIndex() == 1){
                System.out.println("Timer Stop");

        }
    }//GEN-LAST:event_btnDetenerActionPerformed
        
    private void updateTimerLabel() {
        long hours = tiempoTranscurrido.toHours();
        long minutes = tiempoTranscurrido.toMinutesPart();
        long seconds = tiempoTranscurrido.toSecondsPart();

        String tiempoStr = String.format("%02d:%02d:%02d", hours, minutes, seconds);
        lblTiempo.setText(tiempoStr);
    }
    private void resetTimerLabel(){
        long hours = 00;
        long minutes = 00;
        long seconds = 00;

        String tiempoStr = String.format("%02d:%02d:%02d", hours, minutes, seconds);
        lblTiempo.setText(tiempoStr);
    }
/**
 * define que tipo de modalidad de tiempo usar
 * @param evt escoger una opción
 */    
    private void comboRelojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRelojActionPerformed
        if (comboReloj.getSelectedIndex() == 0){
            System.out.println("Seleccionado Cronometro");
            comboHoras.setEnabled(false);
            comboMinutos.setEnabled(false);
            comboSegundos.setEnabled(false);
            btnIniciar.setEnabled(true);
            btnPausar.setEnabled(false);;
            btnDetener.setEnabled(true);
            
            comboHoras.setVisible(true);
            comboMinutos.setVisible(true);
            comboSegundos.setVisible(true);
            
            comboHoras.updateUI();
            comboMinutos.updateUI();
            comboSegundos.updateUI();
            btnIniciar.updateUI();
            btnPausar.updateUI();
            btnDetener.updateUI();
            resetTimerLabel();

        } if (comboReloj.getSelectedIndex() == 1){
            System.out.println("Seleccionado Timer");
            comboHoras.setEnabled(true);
            comboMinutos.setEnabled(true);
            comboSegundos.setEnabled(true);
            btnIniciar.setEnabled(true);
            btnPausar.setEnabled(true);
            btnDetener.setEnabled(true);

            comboHoras.updateUI();
            comboMinutos.updateUI();
            comboSegundos.updateUI();
            btnIniciar.updateUI();
            btnPausar.updateUI();
            btnDetener.updateUI();
            resetTimerLabel();
            
        } if (comboReloj.getSelectedIndex() == 2) {
            System.out.println("Seleccionado NO Cronometro");
            comboHoras.setEnabled(false);
            comboMinutos.setEnabled(false);
            comboSegundos.setEnabled(false);
            btnIniciar.setEnabled(false);
            btnPausar.setEnabled(false);
            btnDetener.setEnabled(false);

            comboHoras.updateUI();
            comboMinutos.updateUI();
            comboSegundos.updateUI();
            btnIniciar.updateUI();
            btnPausar.updateUI();
            btnDetener.updateUI();
            resetTimerLabel();
        }
    }//GEN-LAST:event_comboRelojActionPerformed
/**
 * cierra la ventana de configuracion y guarda la configuracion seleccionada
 * @param evt click 
 */
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dificultad = (String) comboDificultad.getSelectedItem();
        reloj = (String) comboReloj.getSelectedItem();
        String strSizeTablero = (String) comboTablero.getSelectedItem();
        String[] intSizeTablero = strSizeTablero.split("x");
        sizeTablero = Integer.parseInt(intSizeTablero[0]);
        if (comboLado.getSelectedItem() == "Derecha"){
            lado = true;
        } else {
            lado = false;
        }
        sonido = (boolean) toggleSonido.isSelected();
        
        Data config = new Data(dificultad, reloj, lado, sonido, tiempoJuego, sizeTablero);
            try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("config.dat"))) {
                oos.writeObject(config); // Escribimos la configuracion cada vez q salimos
                System.out.println("Dificultad: " + dificultad + "\nReloj: " + reloj + "\nLado Panel: " + sonido + "\nSonido: " + sonido + "\nTiempo Juego: " + tiempoJuego + "\nSize Tablero: " + sizeTablero);
            } catch (IOException e) {
                e.printStackTrace();
            }
            setVisible(false);
    }//GEN-LAST:event_btnSalirActionPerformed
/**
 * set de horas para un timer
 * @param evt seleccionar una hora
 */
    private void comboHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboHorasActionPerformed
        String selectedHora = (String) comboHoras.getSelectedItem(); // Get the selected item as a String
        horas = Integer.parseInt(selectedHora); // Convert the String to an Integer
        tiempoJuego = Duration.ofHours(horas).plusMinutes(minutos).plusSeconds(segundos);
        System.out.println(tiempoJuego.toString());
    }//GEN-LAST:event_comboHorasActionPerformed
/**
 * set de minutos para timer
 * @param evt seleccionar los minutos
 */
    private void comboMinutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMinutosActionPerformed
        String selectedMinutos = (String) comboMinutos.getSelectedItem(); // Get the selected item as a String
        minutos = Integer.parseInt(selectedMinutos); // Convert the String to an Integer
        tiempoJuego = Duration.ofHours(horas).plusMinutes(minutos).plusSeconds(segundos);
        System.out.println(tiempoJuego.toString());
    }//GEN-LAST:event_comboMinutosActionPerformed
/**
 * set de segundos para un timer
 * @param evt seleccionar los segundos
 */
    private void comboSegundosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSegundosActionPerformed
        String selectedSegundos = (String) comboSegundos.getSelectedItem(); // Get the selected item as a String
        segundos = Integer.parseInt(selectedSegundos); // Convert the String to an Integer
        tiempoJuego = Duration.ofHours(horas).plusMinutes(minutos).plusSeconds(segundos);
        System.out.println(tiempoJuego.toString());
    }//GEN-LAST:event_comboSegundosActionPerformed

    private void comboLadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboLadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboLadoActionPerformed

    private void comboDificultadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDificultadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDificultadActionPerformed

    private void comboTableroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTableroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTableroActionPerformed

    /**
     * mcrea una nueva ventana de configuración 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuConfiguracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuConfiguracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuConfiguracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuConfiguracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuConfiguracion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetener;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnPausar;
    private javax.swing.JToggleButton btnSalir;
    private javax.swing.JComboBox<String> comboDificultad;
    private javax.swing.JComboBox<String> comboHoras;
    private javax.swing.JComboBox<String> comboLado;
    private javax.swing.JComboBox<String> comboMinutos;
    private javax.swing.JComboBox<String> comboReloj;
    private javax.swing.JComboBox<String> comboSegundos;
    private javax.swing.JComboBox<String> comboTablero;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblTiempo;
    private javax.swing.JPanel panelLbls;
    private javax.swing.JPanel panelListbox;
    private javax.swing.JPanel panelReloj;
    private javax.swing.JCheckBox toggleSonido;
    // End of variables declaration//GEN-END:variables
}
